I"¥	(function() {
  jQuery(function() {
    $(".content li").on("click", function() {
      var main, value;
      value = this.id;
      main = $('#' + value).attr('class');
      return $(this).toggleClass("scrolling glyphicon-ok", function() {
        if ($(this).hasClass("scrolling")) {
          $("td." + main + "+" + value).show;
          return $.get('/scrolls/show', {
            outside: main,
            inside: value
          }).done(function(data, status, e) {
            console.log(status);
            $('#show_slider').append('<div id="slider_' + main + '_' + value + '"></div>');
            return $('#slider_' + main + '_' + value).append(data);
          });
        } else {
          main = main.split(" ");
          $("div").remove('#slider_' + main[0] + '_' + value);
          $('tr>td.' + main[0] + '+' + value).hide();
          return console.log("td ." + main[0] + "+" + value);
        }
      });
    });
    return $('.header').click(function() {
      var $content, $header;
      $header = $(this);
      $content = $header.next();
      return $content.slideToggle(500);
    });
  });


  /*
  $.getJSON("/cipher/search_suggestions").done (searchData) ->
  		console.log(searchData)
  		split = (val) ->
    			val.split /,\s/  
  		extractLast = (term) ->
    			split(term).pop()
  		$('#search_suggest').bind('keydown', (event) ->
    			if event.keyCode == $.ui.keyCode.TAB and $(this).autocomplete('instance').menu.active
      		event.preventDefault()
    			return
  		).autocomplete
    			minLength: 0
    			source: (request, response) ->
      		 * delegate back to autocomplete, but extract the last term
      			response $.ui.autocomplete.filter(searchData, extractLast(request.term))
      			return
    			focus: ->
      		 * prevent value inserted on focus
      			false
    			select: (event, ui) ->
      			terms = split(value)
      			 * remove the current input
      			terms.pop()
      			 * add the selected item
      			terms.push ui.item.value
      			#console.log(terms)
      			showPage(terms[terms.length-1])
      			 * add placeholder to get the comma-and-space at the end
      			terms.push ''
      			value = terms.join(', ')
      			false
  				return
  		return
  	showPage = (value) ->
  		console.log(value)
  		$.get('/cipher/output',{name: value}).done (data,status,e) ->
  			#alert(e.responseText)
  			$("#show_output").append(e.responseText)
  			return
   */

}).call(this);
:ET